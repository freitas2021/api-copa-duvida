// <auto-generated />
using System;
using ApiCopaStone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiCopaStone.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ApiCopaStone.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ApiCopaStone.Models.FaseCopa", b =>
                {
                    b.Property<int>("FaseCopaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("FaseCopaId");

                    b.ToTable("FaseCopas");
                });

            modelBuilder.Entity("ApiCopaStone.Models.Jogo", b =>
                {
                    b.Property<int>("JogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FaseCopaId")
                        .HasColumnType("int");

                    b.Property<int>("GolsSelecaoA")
                        .HasColumnType("int");

                    b.Property<int>("GolsSelecaoB")
                        .HasColumnType("int");

                    b.Property<DateTime>("InicioJogo")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SelecaoAId")
                        .HasColumnType("int");

                    b.Property<int>("SelecaoBId")
                        .HasColumnType("int");

                    b.Property<int?>("SelecaoId")
                        .HasColumnType("int");

                    b.HasKey("JogoId");

                    b.HasIndex("FaseCopaId");

                    b.HasIndex("SelecaoId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("ApiCopaStone.Models.Selecao", b =>
                {
                    b.Property<int>("SelecaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UrlImagemBandeira")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.HasKey("SelecaoId");

                    b.ToTable("Selecaos");
                });

            modelBuilder.Entity("ApiCopaStone.Models.Jogo", b =>
                {
                    b.HasOne("ApiCopaStone.Models.FaseCopa", "FaseCopa")
                        .WithMany()
                        .HasForeignKey("FaseCopaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiCopaStone.Models.Selecao", "Selecao")
                        .WithMany()
                        .HasForeignKey("SelecaoId");

                    b.Navigation("FaseCopa");

                    b.Navigation("Selecao");
                });
#pragma warning restore 612, 618
        }
    }
}
